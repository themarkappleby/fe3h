{
  -- Single button to "activate" stairs, altars, portals, shops and hatches.
  -- If items are present, grab them, otherwise wait one turn.
  function action()
    local feature = view.feature_at(0, 0)
    local realItems = {}
    local things = items.get_items_at(0, 0)
    if things then
      for index,thing in ipairs(things)
      do
        if thing.has_skeleton == false then
          table.insert(realItems, thing)
        end
      end
    end
    if table.getn(realItems) > 0 then
      crawl.sendkeys('g')
    elseif string.find(feature, "stairs_down_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "hatch_down_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "enter_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "altar_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "stairs_up_") then
      crawl.sendkeys('<')
    elseif string.find(feature, "hatch_up_") then
      crawl.sendkeys('<')
    elseif string.find(feature, "exit_") then
      crawl.sendkeys('<')
    elseif string.find(feature, "return_") then
      crawl.sendkeys('<')
    else
      crawl.sendkeys('.')
    end
  end

  function getMonsterList()
    local monsters = {}
    for x = -7,7 do
      for y = -7,7 do
        m = monster.get_monster_at(x, y)
        local attitude_hostile = 0
        if m and (m:attitude() == attitude_hostile) and not (m:is_firewood()) then
          desc = m:desc()
          if (monsters[desc] == nil) then
            monsters[desc] = 1
          else
            monsters[desc] = monsters[desc] + 1
          end
        end
      end
    en
    return monsters
  end

  -- If enemy in LOS then auto-attack, otherwise auto-explore
  function auto() 
    local first_monster = next(getMonsterList())
    if (first_monster) then
      crawl.sendkeys('\9')
    else
      crawl.sendkeys('o')
    end
  end
}

macros += M z ===auto
macros += M x ===actiontravel_delay = -1
show_travel_trail = true
remember_name = false
tile_font_msg_size = 18
tile_font_crt_size = 12
easy_confirm = all
autofight_throw = true
auto_switch = true
msg_min_height = 9
msg_max_height = 9
show_more = false
force_more_message = aaa
autopickup = $?!+"/}
autopickup_exceptions = <stone, <artefact, <wand
tile_show_threat_levels = trivial, easy, tough, nasty
tile_filter_scaling = false
tile_viewport_scale = 1.1
tile_map_scale = 0.5
tile_skip_title = true
default_manual_training = true
explore_stop = items,shops,altars,portals,branches,runed_doors
explore_stop += greedy_pickup_smart,greedy_visited_item_stack
runrest_ignore_message ^= it creaks loudly
-- weapon = random
-- species = random
-- background = random
name = *

# a
macros += M a @

# ctrl-p
-- macros += M \{16} \{9}

# F1
macros += M \{-1073741882} za\{13}

# F2
macros += M \{-1073741883} zb\{13}

# F3
macros += M \{-1073741884} z*


# F4
macros += M \{-1073741885} aa\{13}

# F5
macros += M \{-1073741886} ab\{13}

# F6
macros += M \{-1073741887} a


# F7
macros += M \{-1073741888} I

# F8
macros += M \{-1073741889} M

# F9
macros += M \{-1073741890} ^


# F10
macros += M \{-1073741891} \{16}

# F11
-- macros += M \{-1073741892} o

# F12
macros += M \{-1073741893} \{-1073741892}

macros += M ~ r
macros += M ! w
macros += M @ %
macros += M # '

macros += M $ q
macros += M % W
macros += M ^ i
macros += M & m

macros += M * V
macros += M ( P
macros += M ) \{6}..\{13},,
macros += M _ X

macros += M 5 .
macros += M 0 g

macros += M + G

macros += K 0 \{13}
macros += K1 0 \{13}
macros += K2 0 \{13}
macros += K3 0 \{13}
macros += K4 0 \{13}

autoinscribe += leather armour:3AC

{
  -- Single button to "activate" stairs, altars, portals, shops and hatches.
  -- If items are present, grab them, otherwise wait one turn.
  function action()
    local feature = view.feature_at(0, 0)
    local realItems = {}
    local things = items.get_items_at(0, 0)
    if things then
      for index,thing in ipairs(things)
      do
        if thing.has_skeleton == false then
          table.insert(realItems, thing)
        end
      end
    end
    if table.getn(realItems) > 0 then
      crawl.sendkeys('g')
    elseif string.find(feature, "stairs_down_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "hatch_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "enter_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "altar_") then
      crawl.sendkeys('>')
    elseif string.find(feature, "stairs_up_") then
      crawl.sendkeys('<')
    elseif string.find(feature, "exit_") then
      crawl.sendkeys('<')
    elseif string.find(feature, "return_") then
      crawl.sendkeys('<')
    else
      crawl.sendkeys('.')
    end
  end

  function getMonsterList()
    local monsters = {}
    for x = -7,7 do
      for y = -7,7 do
        m = monster.get_monster_at(x, y)
        local attitude_hostile = 0
        if m and (m:attitude() == attitude_hostile) and not (m:is_firewood()) then
          desc = m:desc()
          if (monsters[desc] == nil) then
            monsters[desc] = 1
          else
            monsters[desc] = monsters[desc] + 1
          end
        end
      end
    end
    return monsters
  end

  -- If enemy in LOS then auto-attack, otherwise auto-explore
  function auto() 
    local first_monster = next(getMonsterList())
    if (first_monster) then
      crawl.sendkeys('\9')
    else
      crawl.sendkeys('o')
    end
  end
}

macros += M \{16} ===auto
macros += M \{-1073741892} ===action
